version: '3.8'
services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8080:8080"
      - "9090:9090"  # gRPC port
    depends_on:
      - auth-postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_FLYWAY_URL=jdbc:postgresql://auth-postgres:5432/authdb
      - SPRING_FLYWAY_USER=postgres
      - SPRING_FLYWAY_PASSWORD=postgres
      - AUTHENTICATION_ENABLED=true
    networks:
      - milliondollarpicks-network
    restart: unless-stopped

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8080"  # Map to different host port to avoid conflict
    depends_on:
      - user-postgres
      - auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_FLYWAY_URL=jdbc:postgresql://user-postgres:5432/userdb
      - SPRING_FLYWAY_USER=postgres
      - SPRING_FLYWAY_PASSWORD=postgres
      - AUTHENTICATION_ENABLED=true
      - GRPC_CLIENT_AUTH_SERVICE_HOST=auth-service
      - GRPC_CLIENT_AUTH_SERVICE_PORT=9090
    networks:
      - milliondollarpicks-network
    restart: unless-stopped

  auth-postgres:
    image: postgres:15-alpine
    container_name: auth-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=authdb
    volumes:
      - auth-postgres-data:/var/lib/postgresql/data
    networks:
      - milliondollarpicks-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-postgres:
    image: postgres:15-alpine
    container_name: user-postgres
    ports:
      - "5433:5432"  # Map to different host port to avoid conflict
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=userdb
    volumes:
      - user-postgres-data:/var/lib/postgresql/data
    networks:
      - milliondollarpicks-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - auth-postgres
      - user-postgres
    networks:
      - milliondollarpicks-network
    restart: unless-stopped

volumes:
  auth-postgres-data:
  user-postgres-data:

networks:
  milliondollarpicks-network:
    driver: bridge